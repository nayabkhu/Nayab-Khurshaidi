---
title: "Data Assignment 1"
author: "Nayab Khurshaidi"

institute: "University of Pennsylvania"
date: last-modified
toc: true

format: 
  html:
    self-contained: true

editor: source
---

```{r}
#loading in packages
library(ggplot2)
library(readr)
library(ggdag)
library(tidyverse)
library(gt)
library(modelsummary)

# read-in data
# dat = read_csv(here::here("workshops/aau_survey/clean_endline_did.csv" )) %>%
dat = read_csv("https://raw.githubusercontent.com/jrspringman/psci3200-globaldev/main/workshops/aau_survey/clean_endline_did.csv" ) %>%
    # clean home region variable
  mutate(q8_baseline = ifelse(q8_baseline == "Southern Nations, Nationalities, and Peoples Region", "SNNPR", q8_baseline), 
         q8_baseline = str_remove(q8_baseline, " Region"))
# create color palette for plotting
palette = MetBrewer::met.brewer(name = "Cross")
```
# Requirement 1: 

```{r}
#Requirement 1

#renaming the variables 
dat <- dat %>%
  rename(gender_baseline = q3_baseline,
         civilwork_endline = q26_civ,
         civilwork_baseline = q26_civ_baseline,
         politicwork_endline = q26_politics,
         politicwork_baseline = q26_politics_baseline,
         publicwork_endline = q26_public,
         publicwork_baseline = q26_public_baseline,
         politicoffice_endline = q27_1,
         politicoffice_baseline = q27_1_baseline,
         ngostart_endline = q27_3,
         ngostart_baseline = q27_3_baseline,
         participchange_endline = q17_3,
         participchange_baseline = q17_3_baseline,
         youthengage_endline = q17_1,
         youthengage_baseline = q17_1_baseline,
         youthchange_endline = q17_2,
         youthchange_baseline = q17_2_baseline)
```

# Requirement 2: 

An additive index is used when you have multiple different variables that all measure the same idea/concept, which in this case would be future plans for a career in public sector or civil society or feelings of political efficacy. An additive index takes the measures across several values and adds them. An additive index should be used when you are interested in cumulative accounts (i.e. where it would be helpful for the variables to be added) and can only be constructed when all the variables are measured on the same scale. The benefits of an additive index are that it allows for a simplified analysis, because instead of including multiple variables and creating complicated models or visuals, it allows for just one number on a scale. Furthermore, because it is a single number assigned to each unit, it is also easy to interpret. 

A z score tells you how far (in standard deviations) a value is away from the mean of a variable. Averaged z scores calculate the z scores for every value in a variable and then calculate the average. This is another form of a scale with a mean of 0, and a standard deviation of 1. Averaged Z scores between variables serve a similar purpose of combining many variables that measure the same idea, but compared to additive indexes, are helpful because they can be used when variables are not measured on the same scale, or cannot be added. Once again, one of the benefits of averaged z score is an ease in interpretation, as it is measured in standard deviations from the mean, and it also helps detect outliers, because the z score will be a lot higher or lower than the mean. 
 

# Requirement 3: 
```{r}
#Requirement 3

#making all trues 1s and falses 0 for the endline
dat <- dat %>%
  mutate(
    publicwork_endline = if_else(publicwork_endline, 1, 0),
    civilwork_endline = if_else(civilwork_endline, 1, 0),
    politicwork_endline = if_else(politicwork_endline, 1, 0),
    politicoffice_endline = if_else(politicoffice_endline, 1, 0),
    ngostart_endline = if_else(ngostart_endline, 1, 0)
  )

#making all trues 1s and falses 0 for the baseline
dat <- dat %>%
  mutate(
    publicwork_baseline = if_else(publicwork_baseline, 1, 0),
    civilwork_baseline = if_else(civilwork_baseline, 1, 0),
    politicwork_baseline = if_else(politicwork_baseline, 1, 0),
    politicoffice_baseline = if_else(politicoffice_baseline, 1, 0),
    ngostart_baseline = if_else(ngostart_baseline, 1, 0)
  )
```

```{r}
#additive index creation

#adding the values across the rows for the baseline for the career variables 
dat <- dat %>%
  mutate(
    addtive_index_baseline = rowSums(select(dat, publicwork_baseline, civilwork_baseline, politicwork_baseline, politicoffice_baseline, ngostart_baseline))
  )

#adding the values across the rows for the endline for the career variables 
dat <- dat %>%
  mutate(
    addtive_index_endline = rowSums(select(dat, publicwork_endline, civilwork_endline, politicwork_endline, politicoffice_endline, ngostart_endline))
  )
```

```{r}

#z score function from class code
z_score = function(x, y){
  # calculate mean and sd of control group
  c_mean = mean( as.numeric( unlist(x[, y])) , na.rm = T)
  c_sd = sd( as.numeric( unlist(x[, y])) , na.rm = T)
  # subtract control group mean; divide by control group SD
  ( as.numeric(x[, y, drop = TRUE]) - c_mean) / c_sd
}

#creating a vector of career baseline columns 
careerbcols = c("publicwork_baseline","civilwork_baseline","politicwork_baseline", "politicoffice_baseline","ngostart_baseline")

#creating a vector of career endline columns 
careerecols = c("publicwork_endline","civilwork_endline","politicwork_endline", "politicoffice_endline","ngostart_endline")

#creating a vector of efficacy baseline columns 
efficacybcols = c("participchange_baseline", "youthengage_baseline","youthchange_baseline")

#creating a vector of efficacy endline columns 
efficacyecols = c("participchange_endline", "youthengage_endline","youthchange_endline")
  

#applying the z score function to the career columns   
for (i in c(careerbcols, careerecols)) {
  dat[,i] = z_score(dat, i)
}

#applying the z score function to the efficiacy columns 
for (i in c(efficacybcols, efficacyecols)) {
  dat[,i] = z_score(dat, i)
}


#finding the mean of the z scores in order to get the avergaed z score 
dat = dat %>% 
  rowwise() %>% 
  mutate( z_career_end = mean(c_across(all_of(careerecols)), na.rm = TRUE)) %>% 
  mutate( z_career_base = mean(c_across(all_of(careerbcols)), na.rm = TRUE)) %>%
  mutate( z_efficacy_base = mean(c_across(all_of(efficacybcols)), na.rm = TRUE)) %>%
  mutate( z_efficacy_end = mean(c_across(all_of(efficacyecols)), na.rm = TRUE)) %>%
  ungroup()



```

# Requirement 4 
```{r}
#Requirement 4 

#selecting the variables for the graph, making them long data 
careerbase = dat %>% 
  select(`Z-Score Index` = z_career_base,
         `Public Work` = publicwork_baseline, 
         `Civil Work` = civilwork_baseline, 
         `Political Work` = politicwork_baseline, 
         `Political Office` = politicoffice_baseline, 
         `Start an NGO` = ngostart_baseline) %>% 
  drop_na() %>% 
  pivot_longer(everything()) 


#plotting the seperate variables as well as the Z score Index 
ggplot(careerbase , aes(x = value )) + 
  geom_histogram(aes(y = after_stat(count / sum(count))), 
                 binwidth=.5, fill = palette[9]) +
  #geom_col(fill = palette[9]) + 
  facet_wrap(vars(name),  ncol = 2) + 
  scale_y_continuous(labels = scales::percent) +
  labs(y = "Percent of respondents", x = NULL, 
       title = "Career Z Score Baseline")

#selecting the variables for the graph, making them long data 
careerend = dat %>% 
  select(`Z-Score Index` = z_career_end,
         `Public Work` = publicwork_endline, 
         `Civil Work` = civilwork_endline, 
         `Political Work` = politicwork_endline, 
         `Political Office` = politicoffice_endline, 
         `Start an NGO` = ngostart_endline) %>% 
  drop_na() %>% 
  pivot_longer(everything()) 


#plotting the seperate variables as well as the Z score Index 

ggplot(careerend , aes(x = value )) + 
  geom_histogram(aes(y = after_stat(count / sum(count))), 
                 binwidth=.5, fill = palette[9]) +
  #geom_col(fill = palette[9]) + 
  facet_wrap(vars(name),  ncol = 2) + 
  scale_y_continuous(labels = scales::percent) +
  labs(y = "Percent of respondents", x = NULL, 
       title = "Career Z Score Endline")

```

There appears to be no significant difference between the averaged z scores for careers at baseline and endline, with the graphs of the two z scores appearing to overlap almost entirely. This indicates that there was probably not a great change in the levels of future plans for a career in public sector or civil society
before and after the intervention. There appears to be a very left skewed z score index at both times. 


```{r}
#selecting the variables for the graph, making them long data 
efficacybase = dat %>% 
  select(`Z-Score Index` = z_efficacy_base,
         `Participant Change` = participchange_baseline, 
         `Youth Engage` = youthengage_baseline, 
         `Youth Positive Change` = youthchange_baseline) %>% 
  drop_na() %>% 
  pivot_longer(everything()) 

#plotting the seperate variables as well as the Z score Index 

ggplot(efficacybase , aes(x = value )) + 
  geom_histogram(aes(y = after_stat(count / sum(count))), 
                 binwidth=.5, fill = palette[9]) +
  #geom_col(fill = palette[9]) + 
  facet_wrap(vars(name),  ncol = 2) + 
  scale_y_continuous(labels = scales::percent) +
  labs(y = "Percent of respondents", x = NULL, 
       title = "Efficacy Z Score Baseline")

#selecting the variables for the graph, making them long data 
efficacyend = dat %>% 
  select(`Z-Score Index` = z_efficacy_end,
 `Participant Change` = participchange_endline, 
         `Youth Engage` = youthengage_endline, 
         `Youth Positive Change` = youthchange_endline) %>% 
  drop_na() %>% 
  pivot_longer(everything()) 

#plotting the seperate variables as well as the Z score Index 

ggplot(efficacyend , aes(x = value )) + 
  geom_histogram(aes(y = after_stat(count / sum(count))), 
                 binwidth=.5, fill = palette[9]) +
  #geom_col(fill = palette[9]) + 
  facet_wrap(vars(name),  ncol = 2) + 
  scale_y_continuous(labels = scales::percent) +
  labs(y = "Percent of respondents", x = NULL, 
       title = "Efficacy Z Score endline")

```

There appears to be few substantial difference between the averaged z scores for cFeelings of political efficacy at baseline and endline, with the graphs of the two z scores appearing to overlap almost entirely. This indicates that there was probably not a great change in the levels of feelings of political efficacy
before and after the intervention. However, one significant difference between the graphs of the z scores at the two times is an increased left skew at endline, which can be interpreted as more values that were greater than the mean, on average, at endline than baseline after the intervention.  


# Requirement 5 
```{r}
#Requirement 5 

#creating a new dataframe that only keeps the required columns 
estimates <- dat %>%
  select(response_id, gender_baseline, 
         z_career_end, z_career_base,
         z_efficacy_base, z_efficacy_end)

#running the regression model 
model <- lm(z_career_base ~ z_efficacy_base, data = dat)

#outputting the results, omitting unneeded indicators 
modelsummary(
  model,
  estimate  = "{estimate}{stars} ({std.error})",
             statistic = NULL,
  gof_omit = 'IC|RMSE|Log|F|R2$|Std.')

```
The intercept in this model can be interpreted as the expected value for future plans to have a career in the public sector or civil society when feelings of political efficacy are zero. In this model, because the intercept is 0, it would be interpreted that when feelings of political efficacy are nonexistent, people do not have a desire to pursue future careers in public or civil work. 

The slope coefficient indicates that for every one unit change in the feelings of political efficacy, there is a 0.083 unit increase in the feelings of pursuing a career in public or civil work. 

In order to interpret this relationship as causal, we would have to assume that there are no confounding variables, there are no variables that we need to control for, there is no omitted variable that could be affecting both, and there is no reverse causality (where future plans are actually affecting the feelings of political efficacy). 


# Requirement 6 
```{r}
#Requirement 6 

#making the gender baseline variable a binary indicator that assigns 1 to Males 
estimates <- estimates %>%
  mutate(gender_binary = ifelse(gender_baseline == "Male", 1, 0))

#calculating the mean for efficacy at baseline and ednline
efficacy_baseline_mean <- mean(estimates$z_efficacy_base, na.rm = TRUE)
efficacy_endline_mean <- mean(estimates$z_efficacy_end, na.rm = TRUE)

#recoding the variables as binaries (1 if the value is greater than the mean, 0 if it is less than)
estimates <- estimates %>%
  mutate(z_efficacy_base = ifelse(z_efficacy_base >= efficacy_baseline_mean, 1, 0)) %>%
  mutate(z_efficacy_end = ifelse(z_efficacy_end >= efficacy_endline_mean, 1, 0))

#running a second regression model with future plans and efficacy at baseline, but adding a gender interaction term
model2 <- lm(z_career_base  ~  z_efficacy_base + gender_binary + z_efficacy_base*gender_binary , data = estimates)

#outputting the results 
modelsummary(
  model2,
  estimate  = "{estimate}{stars} ({std.error})",
             statistic = NULL,
  gof_omit = 'IC|RMSE|Log|F|R2$|Std.')
```
The intercept is -0.106, which means that the expected value of people who want to pursue a career in the civil or public work when the feelings of political efficacy is at 0 and when the gender is 0 (Female) is -0.106. 

The coefficient for z efficacy base indicates that if people have a higher than average feeling of political efficacy, they are assosciated with a 0.066 increase in future plans, when gender is held constant. 

The coefficient for gender indicates that when political efficacy is held constant, the average difference in future plans between males and females is usually 0.078. 

Finally, the interaction coefficient idnicates that the effect of feelings of political efficacy on future desires to work in civil service is different for the two genders. This implies that when the gender is male (gender = 1) there is actually a decreased effect (-0.026) of political efficacy on the future plans for civil work. 


# Requirement 7 
```{r}
#Requirement 7 

#creating a dataframe of long data for the career variable 
career_long <- estimates %>%
  #pivoting longer the data
  pivot_longer(cols = starts_with("z_career"),
               names_to = "Time",
               values_to = "Career") %>%
  #removing the efficacy variables 
  select(-starts_with("z_efficacy"))

#leaving the time variable with just "base" or "end"
career_long$Time <- gsub("z_career_", "", career_long$Time)

#changing the efficacy data from wide to long, creating a seperate dataframe
efficacy_long <- estimates %>%
  pivot_longer(cols = starts_with("z_efficacy"),
               names_to = "Time",
               values_to = "Efficacy") %>%
  #removing the career variables
  select(-starts_with("z_career"))

#making the time variable either base or end 
efficacy_long$Time <- gsub("z_efficacy_", "", efficacy_long$Time)

#merng the two data frames 
estimates_long <- merge(career_long, efficacy_long, by = c("response_id", "Time"))

#removing the duplicate gender variables after the merge 
estimates_long <- estimates_long[, !(names(estimates_long) %in% c("gender_binary.y", "gender_baseline.y"))]

```

```{r}

#running a fixed effects model
model3 <- lm(Career ~ Efficacy + factor(response_id), data = estimates_long)

#using model summary to display the data
modelsummary(
  model3,
  coef_omit = "factor\\(.*",
  estimate  = "{estimate}{stars} ({std.error})",
             statistic = NULL,
  gof_omit = 'IC|RMSE|Log|F|R2$|Std.')

```
With the addition of fixed effects, which essentially controls for all the characteristics for every respondent which do not change over time, so beta now tells us the effect of efficacy on future plans, controlling for all other characteristics that remain constant for every single respondent in the data frame, which means that we can say that there are no individual differences that are causing the change in future plans. We can say that for every single unit increase in feelings of efficacy, the estimated value of future plans in civil work increases by approximately 0.017 units, holding all other variables constant.

